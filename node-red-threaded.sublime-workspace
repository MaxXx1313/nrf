{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"node",
				"node-red/"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"function",
				"map(function(aSome) {"
			],
			[
				"se",
				"selector	inject.js"
			],
			[
				"sel",
				"selectorId	CrawlerSelector.dao.js"
			],
			[
				"currentTa",
				"currentTab	popup.js"
			],
			[
				"sta",
				"status	CrawlerSelector.dao.js"
			],
			[
				"th",
				"that	inject.js"
			],
			[
				"un",
				"unwrap(element)	inject.js"
			],
			[
				"get",
				"getElementById('aSome')"
			],
			[
				"in",
				"inline-block"
			],
			[
				"blo",
				"inline-block"
			],
			[
				"i",
				"itemTemplate	popup.js"
			],
			[
				"ht",
				"htmlData	popup.js"
			],
			[
				"getEle",
				"getElementsByClassName('aSome')"
			],
			[
				"cur",
				"currentTab	popup.js"
			],
			[
				"fu",
				"function"
			],
			[
				"reduce",
				"reduce(function(aSome) {"
			],
			[
				"ta",
				"table2"
			],
			[
				"tabl",
				"table1"
			],
			[
				"table",
				"table2"
			],
			[
				"tab",
				"table1"
			],
			[
				"tAB",
				"table2"
			],
			[
				"s",
				"set_key_hook	function"
			],
			[
				"me",
				"home/"
			],
			[
				"el",
				"else	keyword"
			],
			[
				"pa",
				"path	module"
			],
			[
				"WIN",
				"WIN_POS_CENTER	instance"
			],
			[
				"pad",
				"padding"
			],
			[
				"new",
				"newsObj"
			],
			[
				"re",
				"require"
			],
			[
				"err",
				"error"
			],
			[
				"de",
				"default_conversion"
			],
			[
				"ex",
				"extend"
			],
			[
				"it",
				"input"
			],
			[
				"ob_en",
				"ob_end_flush"
			],
			[
				"wr",
				"writeFileSync"
			],
			[
				"gall",
				"gallery_marker"
			],
			[
				"jq",
				"jquery"
			],
			[
				"LEVE",
				"LUXURY_LEVEL_1"
			],
			[
				"stri",
				"stripos"
			],
			[
				"els",
				"else"
			],
			[
				"res",
				"results"
			],
			[
				"page",
				"pageData"
			],
			[
				"c",
				"cwun	React: componentWillUnmount: fn() { ... }"
			],
			[
				"tri",
				"trigger_error"
			],
			[
				"fetc",
				"fetchOne"
			],
			[
				"a",
				"auto"
			],
			[
				"up",
				"upper"
			],
			[
				"li",
				"link	Tag"
			],
			[
				"pre",
				"preg_match"
			],
			[
				"unse",
				"unset"
			],
			[
				"user",
				"username"
			],
			[
				"print_",
				"print_table"
			],
			[
				"var",
				"var_dump"
			],
			[
				"con",
				"content"
			],
			[
				"T",
				"T_TARGET"
			],
			[
				"Ite",
				"ItemRenderer"
			],
			[
				"creat",
				"createClass"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"web",
				"web_app"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"ci",
				"Cities"
			],
			[
				"unw",
				"unwrapAll"
			],
			[
				"to",
				"toggle"
			],
			[
				"sh",
				"showCity"
			],
			[
				"cl_",
				"cl_x"
			],
			[
				"clus",
				"clusterSize"
			],
			[
				"sor",
				"sort"
			],
			[
				"dis",
				"distance"
			],
			[
				"SEA",
				"TAB_SEARCH"
			],
			[
				"stop",
				"stops"
			],
			[
				"lat",
				"latitude"
			],
			[
				"sele",
				"selectedCity"
			],
			[
				"add",
				"addLayer"
			],
			[
				"po",
				"position"
			],
			[
				"arg",
				"arguments"
			],
			[
				"cle",
				"clearTimeout〔function〕"
			],
			[
				"show",
				"showCity"
			],
			[
				"retr",
				"return"
			],
			[
				"city",
				"cityId"
			],
			[
				"clea",
				"clearInterval(_sheduleRefreshTimer"
			],
			[
				"stopLa",
				"stopsLayer"
			],
			[
				"showSche",
				"showScheduleDetails"
			],
			[
				"cre",
				"createElement〔function〕"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"fon",
				"font-size"
			],
			[
				"_ma",
				"_marker"
			],
			[
				"clo",
				"closePopup"
			],
			[
				"open",
				"openPopup"
			],
			[
				"prot",
				"prototype"
			],
			[
				"pr",
				"proto	Prototype"
			],
			[
				"pro",
				"prototype"
			],
			[
				"calc",
				"calcAngle"
			],
			[
				"_m",
				"_map"
			],
			[
				"lo",
				"log('Search"
			],
			[
				"getLa",
				"getLatLng"
			],
			[
				"set",
				"setPosition"
			],
			[
				"remo",
				"removeLayer"
			],
			[
				"stopI",
				"stopInfoWindow"
			],
			[
				"inf",
				"infowindow"
			],
			[
				"setRo",
				"setRotation"
			],
			[
				"_in",
				"_infowindow"
			],
			[
				"_i",
				"_istart"
			],
			[
				"f",
				"f	Anonymous Function"
			],
			[
				"_cre",
				"_createHelpers"
			],
			[
				"if",
				"ifrom"
			],
			[
				"is",
				"istart"
			],
			[
				"getP",
				"getPathSlice"
			],
			[
				"_sq",
				"_sqrOffsetToNext"
			],
			[
				"start",
				"startPoint"
			],
			[
				"l",
				"length"
			],
			[
				"_",
				"_map〔variable〕"
			],
			[
				"la",
				"lat"
			],
			[
				"save",
				"saveState"
			],
			[
				"isS",
				"isStateSaved"
			],
			[
				"length",
				"length==0"
			],
			[
				"_searchN",
				"_searchNum"
			],
			[
				"clear",
				"clearInterval〔function〕"
			],
			[
				"Ma",
				"Marker"
			],
			[
				"row",
				"rows"
			],
			[
				"rou",
				"routePath"
			],
			[
				"TAB",
				"TAB_ROUTES"
			],
			[
				"te",
				"text-align"
			],
			[
				"TAB_",
				"TAB_SEARCH"
			],
			[
				"ge",
				"getMinutes〔function〕"
			],
			[
				"wa",
				"warn"
			],
			[
				"getS",
				"getStopKml"
			]
		]
	},
	"buffers":
	[
		{
			"file": "node_modules/node-red/red/red.js",
			"settings":
			{
				"buffer_size": 2814,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n\nvar RED = require(\"node-red\");\nvar settings = req\n\n\n\nvar http = require('http');\nvar https = require('https');\nvar util = require(\"util\");\nvar express = require(\"express\");\nvar crypto = require(\"crypto\");\ntry { bcrypt = require('bcrypt'); }\ncatch(e) { bcrypt = require('bcryptjs'); }\nvar nopt = require(\"nopt\");\nvar path = require(\"path\");\nvar fs = require(\"fs-extra\");\n\nvar server;\nvar app = express();\n\nvar settingsFile;\nvar flowFile;\n\nvar knownOpts = {\n    \"settings\":[path],\n    \"userDir\":[path],\n    \"port\": Number,\n    \"v\": Boolean,\n    \"help\": Boolean\n};\nvar shortHands = {\n    \"s\":[\"--settings\"],\n    \"u\":[\"--userDir\"],\n    \"p\":[\"--port\"],\n    \"?\":[\"--help\"]\n};\nnopt.invalidHandler = function(k,v,t) {\n    // TODO: console.log(k,v,t);\n}\n\nvar parsedArgs = nopt(knownOpts,shortHands,process.argv,2)\n\nif (parsedArgs.help) {\n    console.log(\"Node-RED v\"+RED.version());\n    console.log(\"Usage: node-red [-v] [-?] [--settings settings.js] [--userDir DIR]\");\n    console.log(\"                [--port PORT] [flows.json]\");\n    console.log(\"\");\n    console.log(\"Options:\");\n    console.log(\"  -s, --settings FILE  use specified settings file\");\n    console.log(\"  -u, --userDir  DIR   use specified user directory\");\n    console.log(\"  -p, --port     PORT  port to listen on\");\n    console.log(\"  -v                   enable verbose output\");\n    console.log(\"  -?, --help           show usage\");\n    console.log(\"\");\n    console.log(\"Documentation can be found at http://nodered.org\");\n    process.exit();\n}\nif (parsedArgs.argv.remain.length > 0) {\n    flowFile = parsedArgs.argv.remain[0];\n}\n\nif (parsedArgs.settings) {\n    // User-specified settings file\n    settingsFile = parsedArgs.settings;\n} else if (parsedArgs.userDir && fs.existsSync(path.join(parsedArgs.userDir,\"settings.js\"))) {\n    // User-specified userDir that contains a settings.js\n    settingsFile = path.join(parsedArgs.userDir,\"settings.js\");\n} else {\n    if (fs.existsSync(path.join(process.env.NODE_RED_HOME,\".config.json\"))) {\n        // NODE_RED_HOME contains user data - use its settings.js\n        settingsFile = path.join(process.env.NODE_RED_HOME,\"settings.js\");\n    } else {\n        var userDir = path.join(process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE,\".node-red\");\n        var userSettingsFile = path.join(userDir,\"settings.js\");\n        if (fs.existsSync(userSettingsFile)) {\n            // $HOME/.node-red/settings.js exists\n            settingsFile = userSettingsFile;\n        } else {\n            var defaultSettings = path.join(__dirname,\"settings.js\");\n            var settingsStat = fs.statSync(defaultSettings);\n            if (settingsStat.mtime.getTime() < settingsStat.ctime.getTime()) {\n                // Default settings file has not been modified - safe to copy\n                fs.copySync(defaultSettings,userSettingsFile);\n                settingsFile = userSettingsFile;\n            } else {\n                // Use default settings.js as it has been modified\n                settingsFile = defaultSettings;\n            }\n        }\n    }\n}\n\ntry {\n    var settings = require(settingsFile);\n    settings.settingsFile = settingsFile;\n} catch(err) {\n    console.log(\"Error loading settings file: \"+settingsFile)\n    if (err.code == 'MODULE_NOT_FOUND') {\n        if (err.toString().indexOf(settingsFile) === -1) {\n            console.log(err.toString());\n        }\n    } else {\n        console.log(err);\n    }\n    process.exit();\n}\n\nif (parsedArgs.v) {\n    settings.verbose = true;\n}\n\nif (settings.https) {\n    server = https.createServer(settings.https,function(req,res){app(req,res);});\n} else {\n    server = http.createServer(function(req,res){app(req,res);});\n}\nserver.setMaxListeners(0);\n\nfunction formatRoot(root) {\n    if (root[0] != \"/\") {\n        root = \"/\" + root;\n    }\n    if (root.slice(-1) != \"/\") {\n        root = root + \"/\";\n    }\n    return root;\n}\n\nif (settings.httpRoot === false) {\n    settings.httpAdminRoot = false;\n    settings.httpNodeRoot = false;\n} else {\n    settings.httpRoot = settings.httpRoot||\"/\";\n    settings.disableEditor = settings.disableEditor||false;\n}\n\nif (settings.httpAdminRoot !== false) {\n    settings.httpAdminRoot = formatRoot(settings.httpAdminRoot || settings.httpRoot || \"/\");\n    settings.httpAdminAuth = settings.httpAdminAuth || settings.httpAuth;\n} else {\n    settings.disableEditor = true;\n}\n\nif (settings.httpNodeRoot !== false) {\n    settings.httpNodeRoot = formatRoot(settings.httpNodeRoot || settings.httpRoot || \"/\");\n    settings.httpNodeAuth = settings.httpNodeAuth || settings.httpAuth;\n}\n\nsettings.uiPort = parsedArgs.port||settings.uiPort||1880;\nsettings.uiHost = settings.uiHost||\"0.0.0.0\";\n\nif (flowFile) {\n    settings.flowFile = flowFile;\n}\nif (parsedArgs.userDir) {\n    settings.userDir = parsedArgs.userDir;\n}\n\ntry {\n    RED.init(server,settings);\n} catch(err) {\n    if (err.code == \"not_built\") {\n        console.log(\"Node-RED has not been built. See README.md for details\");\n    } else {\n        console.log(\"Failed to start server:\");\n        if (err.stack) {\n            console.log(err.stack);\n        } else {\n            console.log(err);\n        }\n    }\n    process.exit(1);\n}\n\nfunction basicAuthMiddleware(user,pass) {\n    var basicAuth = require('basic-auth');\n    var checkPassword;\n    if (pass.length == \"32\") {\n        // Assume its a legacy md5 password\n        checkPassword = function(p) {\n            return crypto.createHash('md5').update(p,'utf8').digest('hex') === pass;\n        }\n    } else {\n        checkPassword = function(p) {\n            return bcrypt.compareSync(p,pass);\n        }\n    }\n\n    return function(req,res,next) {\n        if (req.method === 'OPTIONS') {\n            return next();\n        }\n        var requestUser = basicAuth(req);\n        if (!requestUser || requestUser.name !== user || !checkPassword(requestUser.pass)) {\n            res.set('WWW-Authenticate', 'Basic realm=Authorization Required');\n            return res.sendStatus(401);\n        }\n        next();\n    }\n}\n\nif (settings.httpAdminRoot !== false && settings.httpAdminAuth) {\n    RED.log.warn(RED.log._(\"server.httpadminauth-deprecated\"));\n    app.use(settings.httpAdminRoot, basicAuthMiddleware(settings.httpAdminAuth.user,settings.httpAdminAuth.pass));\n}\n\nif (settings.httpAdminRoot !== false) {\n    app.use(settings.httpAdminRoot,RED.httpAdmin);\n}\nif (settings.httpNodeRoot !== false && settings.httpNodeAuth) {\n    app.use(settings.httpNodeRoot,basicAuthMiddleware(settings.httpNodeAuth.user,settings.httpNodeAuth.pass));\n}\nif (settings.httpNodeRoot !== false) {\n    app.use(settings.httpNodeRoot,RED.httpNode);\n}\n\nif (settings.httpStatic) {\n    settings.httpStaticAuth = settings.httpStaticAuth || settings.httpAuth;\n    if (settings.httpStaticAuth) {\n        app.use(\"/\",basicAuthMiddleware(settings.httpStaticAuth.user,settings.httpStaticAuth.pass));\n    }\n    app.use(\"/\",express.static(settings.httpStatic));\n}\n\nfunction getListenPath() {\n    var listenPath = 'http'+(settings.https?'s':'')+'://'+\n                    (settings.uiHost == '0.0.0.0'?'127.0.0.1':settings.uiHost)+\n                    ':'+settings.uiPort;\n    if (settings.httpAdminRoot !== false) {\n        listenPath += settings.httpAdminRoot;\n    } else if (settings.httpStatic) {\n        listenPath += \"/\";\n    }\n    return listenPath;\n}\n\nRED.start().then(function() {\n    if (settings.httpAdminRoot !== false || settings.httpNodeRoot !== false || settings.httpStatic) {\n        server.on('error', function(err) {\n            if (err.errno === \"EADDRINUSE\") {\n                RED.log.error(RED.log._(\"server.unable-to-listen\", {listenpath:getListenPath()}));\n                RED.log.error(RED.log._(\"server.port-in-use\"));\n            } else {\n                RED.log.error(RED.log._(\"server.uncaught-exception\"));\n                if (err.stack) {\n                    RED.log.error(err.stack);\n                } else {\n                    RED.log.error(err);\n                }\n            }\n            process.exit(1);\n        });\n        server.listen(settings.uiPort,settings.uiHost,function() {\n            if (settings.httpAdminRoot === false) {\n                RED.log.info(RED.log._(\"server.admin-ui-disabled\"));\n            }\n            process.title = 'node-red';\n            RED.log.info(RED.log._(\"server.now-running\", {listenpath:getListenPath()}));\n        });\n    } else {\n        RED.log.info(RED.log._(\"server.headless-mode\"));\n    }\n}).otherwise(function(err) {\n    RED.log.error(RED.log._(\"server.failed-to-start\"));\n    if (err.stack) {\n        RED.log.error(err.stack);\n    } else {\n        RED.log.error(err);\n    }\n});\n\n\nprocess.on('uncaughtException',function(err) {\n    util.log('[red] Uncaught Exception:');\n    if (err.stack) {\n        util.log(err.stack);\n    } else {\n        util.log(err);\n    }\n    process.exit(1);\n});\n\nprocess.on('SIGINT', function () {\n    RED.stop();\n    // TODO: need to allow nodes to close asynchronously before terminating the\n    // process - ie, promises\n    process.exit();\n});\n",
			"file": "index.js",
			"file_size": 9573,
			"file_write_time": 131106112865934076,
			"settings":
			{
				"buffer_size": 9012,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"set java",
				"Set Syntax: JavaScript"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"pret",
				"HTMLPrettify"
			],
			[
				"git a",
				"Git: Add All"
			],
			[
				"prett",
				"HTMLPrettify"
			],
			[
				"gitcomm",
				"Git: Commit"
			],
			[
				"gitaddal",
				"Git: Add All"
			],
			[
				"git res",
				"Git: Reset (hard) HEAD"
			],
			[
				"git r",
				"Git: Reset (hard) HEAD"
			],
			[
				"pretty",
				"HTMLPrettify"
			],
			[
				"gitc",
				"Git: Commit"
			],
			[
				"git adda",
				"Git: Add All"
			],
			[
				"gitcom",
				"Git: Commit"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"git lo",
				"Git: Open Modified Files"
			],
			[
				"git am",
				"Git: Amend Commit"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"set htm",
				"Set Syntax: HTML"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"set sql",
				"Set Syntax: SQL"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"set bab",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"set php",
				"Set Syntax: PHP"
			],
			[
				"set ma",
				"Set Syntax: MATLAB"
			],
			[
				"set ht",
				"Set Syntax: HTML (Tcl)"
			],
			[
				"set syntax bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"syn apa",
				"Set Syntax: Apache Conf"
			],
			[
				"set con",
				"Set Syntax: Apache Conf"
			],
			[
				"set cf",
				"Set Syntax: CFG Game Configuration"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"HTMLPrettify"
			],
			[
				"pre",
				"HTMLPrettify"
			],
			[
				"htmlprettify",
				"HTMLPrettify: Set `node` Path"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/maksim/project/node-red-threaded",
		"/home/maksim/project/node-red-threaded/node_modules",
		"/home/maksim/project/node-red-threaded/node_modules/node-red",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/nodes",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/nodes/core",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/nodes/core/core",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/red",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/red/api"
	],
	"file_history":
	[
		"/home/maksim/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/maksim/.config/sublime-text-3/Packages/User/JavaScript.sublime-settings",
		"/home/maksim/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/maksim/project/node-red-threaded/node_modules/node-red/red.js",
		"/home/maksim/project/node-red-threaded/index.js",
		"/home/maksim/project/node-red-threaded/settings.js",
		"/home/maksim/project/node-red-threaded/node_modules/xmlbuilder/node_modules/lodash/_setToArray.js",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/page/popup.js",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/injector-selector/inject.css",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/page/popup.html",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/lib/background.js",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/injector-selector/inject.js",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/lib/CrawlerSelector.dao.js",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/manifest.json",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/page/common.css",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/inject.js",
		"/home/maksim/.config/sublime-text-3/Packages/User/Git.sublime-settings",
		"/home/maksim/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/maksim/project/crawler-ext/crawler-chrome-ext/background.js",
		"/home/maksim/.ssh/admin.banknotes.by.pub",
		"/home/maksim/.ssh/config",
		"/home/maksim/project/шкды/curl.txt",
		"/home/maksim/project/abs-parser/index.js",
		"/home/maksim/project/abs-parser/doc.js",
		"/home/maksim/Downloads/irls-maksim.chartkou@altoros.com.pub",
		"/home/maksim/project/abs-parser/doc/Country.list.json",
		"/home/maksim/project/abs-parser/doc/Tour.getTourDates.json",
		"/home/maksim/project/abs-parser/doc/City.getDepartCities.json",
		"/home/maksim/project/abs-parser/index2.js",
		"/home/maksim/project/abs-parser/doc/Hotels.list.json",
		"/home/maksim/project/abs-parser/doc/City.list.json",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/package.json",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/index.html",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/ViewerJS/webodf.js",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/ViewerJS/pdf.worker.js",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/ViewerJS/pdf.js",
		"/usr/lib/node_modules/node-server/bin/node-server",
		"/home/maksim/project/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/ViewerJS/index.html",
		"/home/maksim/projects/pyt1/README.md",
		"/home/maksim/projects/pyt1/start.py",
		"/home/maksim/projects/sql_test.sql",
		"/home/maksim/projects/sql_test2.sql",
		"/home/maksim/projects/init-gmouse/libgmouse/system_a4.h",
		"/home/maksim/projects/init-gmouse/libgmouse/control_a4.h",
		"/media/maksim/STORE/projects/pyt1/start.py",
		"/media/maksim/STORE/projects/pyt1/main_window.py",
		"/media/maksim/STORE/projects/pyt1/README.md",
		"/home/maksim/.PlayOnLinux/shortcuts/BigPharma",
		"/home/maksim/.ssh/banknotes.pem",
		"/media/internal/.ssh/id_rsa",
		"/media/maksim/STORE/projects/banknotes/_documents/226/index.html",
		"/media/maksim/STORE/projects/pyt1/hk.py",
		"/media/maksim/STORE/projects/pyt1/.gitignore",
		"/media/maksim/STORE/projects/news-parser/tunnel.sh",
		"/media/maksim/STORE/projects/news-parser/news-parser/parsers.js",
		"/media/maksim/STORE/projects/news-parser/news-parser/manifest.json",
		"/media/maksim/STORE/projects/news-parser/updates.xml",
		"/home/maksim/deadbeef.mp.dump",
		"/media/maksim/STORE/lib/deadbeef(mpris2).txt",
		"/home/maksim/Downloads/deadbeef-1.8/src/mpris.c",
		"/home/maksim/Downloads/DeaDBeeF-MPRIS-plugin/INSTALL",
		"/home/maksim/Downloads/deadbeef-mpris2-plugin/src/mprisServer.c",
		"/home/maksim/Downloads/deadbeef-mpris2-plugin/configure.ac",
		"/home/maksim/Downloads/deadbeef-mpris2-plugin/configure",
		"/media/maksim/STORE/projects/pyt1/test.py",
		"/media/maksim/STORE/projects/pyt1/requirements.txt",
		"/media/maksim/STORE/projects/pyt1/test.c",
		"/media/maksim/STORE/projects/pyt1/test.js",
		"/media/maksim/STORE/projects/menu-editor/app/my-tree-view.js",
		"/media/maksim/STORE/projects/menu-editor/lib/jquery.scrollpoint.js",
		"/media/maksim/STORE/projects/menu-editor/app/index.js",
		"/media/maksim/STORE/projects/menu-editor/app/data.json",
		"/home/maksim/test.sh",
		"/media/maksim/STORE/projects/menu-editor/app/main.js",
		"/media/maksim/STORE/projects/menu-editor/lib/joint/rappid.js",
		"/media/maksim/STORE/projects/BookReader(copy)/book.css",
		"/media/maksim/STORE/projects/BookReader(copy)/index.html",
		"/media/maksim/STORE/projects/BookReader(copy)/book.js",
		"/media/maksim/STORE/projects/BookReader(copy)/bug1/book.css",
		"/media/maksim/STORE/projects/BookReader(copy)/bug1/book.js",
		"/media/maksim/STORE/projects/news-parser/news-parser/background.js",
		"/media/maksim/STORE/projects/news-parser/news-parser/updates.xml",
		"/media/maksim/STORE/projects/adblock.txt",
		"/media/maksim/STORE/projects/sks_2.0.0/electron-quick-start/package.json",
		"/media/maksim/STORE/projects/sks_2.0.0/electron-quick-start/main.js",
		"/media/maksim/STORE/projects/sks_2.0.0/electron-quick-start/index.html",
		"/media/maksim/STORE/projects/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/index.js",
		"/media/maksim/STORE/projects/sks_2.0.0/nwjs-v0.12.3-linux-ia32/package.nw/package.json",
		"/media/maksim/STORE/projects/ffa-agent/test/app.test.js",
		"/home/maksim/.PlayOnLinux/shortcuts/RimWorld13",
		"/media/maksim/STORE/projects/sks_2.0.0/electron/electron-quick-start/main.js",
		"/media/maksim/STORE/projects/server/gulpfile.js",
		"/home/maksim/.PlayOnLinux/shortcuts/ScrapMechanic",
		"/media/internal/game/ScrapMechanic/StartGame.bat",
		"/home/maksim/.wine/drive_c/users/maksim/AppData/LocalLow/Ludeon Studios/RimWorld/Config/Prefs.xml",
		"/home/maksim/.wine/drive_c/users/maksim/AppData/LocalLow/Ludeon Studios/RimWorld/Config/ModsConfig.xml",
		"/home/maksim/.wine/drive_c/users/maksim/AppData/LocalLow/Ludeon Studios/RimWorld/Config/Knowledge.xml",
		"/home/maksim/.wine/drive_c/users/maksim/AppData/LocalLow/Ludeon Studios/RimWorld/Config/KeyPrefs.xml",
		"/run/user/1000/gvfs/smb-share:port=4450,server=127.0.0.1,share=c$/Users/Tanya/Desktop/ps.js",
		"/home/maksim/.tty/custom-git-prompt.sh",
		"/home/maksim/.bashrc",
		"/home/maksim/.tty/git-prompt-files.sh",
		"/media/maksim/STORE/projects/ffa-agent/lib/user.js",
		"/media/maksim/STORE/projects/ffa-agent/config.json",
		"/media/maksim/STORE/projects/ffa-agent/package.json",
		"/media/maksim/STORE/projects/ffa-agent/node_modules/nano/lib/nano.js",
		"/media/maksim/STORE/projects/ffa-agent/lib/db_init.js",
		"/media/maksim/STORE/projects/ffa-agent/config-example.json",
		"/media/maksim/STORE/projects/ffa-agent/test.js",
		"/media/maksim/STORE/projects/ffa-agent/README.md",
		"/media/maksim/STORE/projects/ffa-agent/node_modules/mocha/bin/mocha",
		"/media/maksim/STORE/projects/ffa-agent/node_modules/mocha/bin/_mocha",
		"/media/maksim/STORE/projects/ffa-agent/app.js",
		"/media/maksim/STORE/projects/ffa-agent/lib/db_names.js",
		"/media/maksim/STORE/projects/ffa-agent/lib/db_utils.js",
		"/media/internal/Dropbox/DEVELOPMENT/bash/git-prompt-files.sh",
		"/media/internal/Dropbox/DEVELOPMENT/bash/gitconfig",
		"/home/maksim/.gitconfig",
		"/media/maksim/STORE/projects/ffa-agent/.gitignore",
		"/media/internal/game/Deponia Doomsday/start",
		"/media/maksim/STORE/projects/image-resize/.gitignore",
		"/media/maksim/STORE/projects/image-resize/readme.txt",
		"/media/maksim/STORE/projects/image-resize/package.json",
		"/media/maksim/STORE/projects/gulp-resize/index.js",
		"/media/maksim/STORE/projects/gulp-resize/.gitignore",
		"/media/maksim/STORE/projects/gulp-resize/readme.txt",
		"/media/maksim/STORE/projects/gulp-resize/package.json.1250749942",
		"/media/maksim/STORE/projects/gulp-resize/package.json"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/media/maksim/STORE/projects/tokenya/app/models"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"parsedArgs",
			"formatRoot",
			"fs",
			"setting",
			"-v",
			"express",
			"window.close",
			"hightlightSelector",
			"cw_selector_save",
			"cw_selector_submit",
			"ElementWrapper",
			"selectTarget",
			"updateSelection",
			"selectTarget",
			"hightlightSelector",
			"sender.tab.id",
			"crawlerSelectorId",
			"element",
			"selectTarget",
			"hightlightSelector",
			"selectTargets",
			"selector",
			"hightlightSelector",
			"url",
			"elementId",
			"item_id",
			"cancelCreatingNewSelector",
			"getSelectors",
			"createNewSelector",
			"sp",
			"SP",
			"selectorList",
			"SelectorList",
			"localStorage['crawler']",
			"setInactive",
			"=",
			"Selector",
			"selector",
			"div",
			"small",
			"get",
			"span",
			",",
			"_cw",
			"no",
			"fieldset",
			"selectTarget",
			"' + '",
			"updateSelection",
			"selectorWindow",
			"target",
			"Target",
			"target",
			"openSelectorDialog",
			"getNameChildIndex",
			"getChildIndex",
			"selectTarget",
			"ElementWrapper",
			"wrap",
			"selectTarget",
			"Target",
			"target",
			"selectTargets",
			"onMouseMove",
			"elemnt",
			"_prevSelected",
			"bindEventListeners",
			"selectorList",
			"SelectorList",
			"temp",
			"hoverSelector",
			"updateSelectorList",
			"enabled",
			"h2",
			"span",
			"selectorCache",
			"Cache",
			"setBadgeBackgroundColor",
			"tab.id",
			"getSelectors",
			"getCities",
			",",
			"country_list",
			"city_list",
			"hotel_list",
			"response",
			"data",
			"npapi",
			"req",
			"PDFJS",
			"Keybinder",
			"signum",
			"kt",
			"Qt",
			"QT",
			"Qt",
			"QT",
			"Qt",
			"QtCore",
			"self._poller",
			"window",
			"menu_items",
			"riaParser",
			"handleEvent",
			"invoke_get_property_in_idle_cb",
			"exit_gracefully",
			"32x32",
			"ind",
			"appindicator.IndicatorCategory",
			"Gtk",
			"gtk",
			"GTK",
			"gtk",
			"GTK",
			"gtk",
			"pos",
			"23",
			"4.5",
			"28",
			"500",
			"'font-family': 'Times New Roman' ",
			"preventEventPropagation",
			"a",
			"hidePreview",
			"canDrop",
			"_finishDrag",
			"getEventNamespace",
			"findDirection"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" ",
			"\\s",
			"  ",
			" ",
			"",
			"\\n",
			"windows-1251",
			"\\n",
			"))",
			"if(",
			"return'",
			",",
			".",
			"){",
			"return",
			"console",
			";",
			",",
			"+=",
			"if",
			"while",
			"var",
			"{",
			"=",
			"gc",
			"pc",
			"po",
			"c",
			"cc",
			"d",
			"l",
			"f",
			"o",
			"c",
			"",
			" ",
			"",
			"FALSE"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "node_modules/node-red/red/red.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2814,
						"regions":
						{
						},
						"selection":
						[
							[
								838,
								838
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9012,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "node-red-threaded.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sett",
				"settings.json"
			],
			[
				"auth",
				"vendors/OAuth.php"
			],
			[
				"hotel_view",
				"views/themed/lion/pages/hotel_view.ctp"
			],
			[
				"contact_us",
				"views/pages/contact_us.ctp"
			],
			[
				"contact",
				"models/contact.php"
			],
			[
				"image",
				"models/image_gallery.php"
			],
			[
				"page_contr",
				"controllers/pages_controller.php"
			],
			[
				"hote",
				"views/themed/lion/pages/hotel_view.ctp"
			],
			[
				"jsdom",
				"node_modules/jsdom/lib/jsdom.js"
			],
			[
				"head",
				"app/views/themed/lion/elements/header.ctp"
			],
			[
				"imagegallery",
				"app/models/image_gallery.php"
			],
			[
				"imagegalleryimage",
				"app/models/image_gallery_image.php"
			],
			[
				"package",
				"app/models/package.php"
			],
			[
				"model",
				"cake/libs/model/model.php"
			],
			[
				"appmodel",
				"cake/libs/model/app_model.php"
			],
			[
				"page",
				"app/models/page.php"
			],
			[
				"imagega",
				"app/models/image_gallery.php"
			],
			[
				"viewgallery_ajax",
				"app/views/themed/lion/image_galleries/viewgallery_ajax.ctp"
			],
			[
				"pages_controller",
				"app/controllers/pages_controller.php"
			],
			[
				"conf",
				"config.json"
			],
			[
				"confi",
				"config.json"
			],
			[
				"ave",
				"js/AvenueManager.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 253.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
